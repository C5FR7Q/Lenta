Именование интерфейсов и классов наследников для случая 1к1: ISomeClass, SomeClass или SomeClass, SomeClassImpl?

LentaClient - вопрос с возможным тестированием. Как передать в конструктор синглтона какие-то данные? Т.к. инициализация прохоисходит через getInstance, значит нужно передать параметром в getInstance. Но дальнейший запрос существующего инстанца требует параметр. Вариант с лету - использовать этот параметр, но не при инициализации передавать null.

    /*Если заранее известно, что при pull-to-refresh порядок новостей в категориях не меняется,
    * можно оптимизировать процесс. Для этого в refresh должен передаваться лист адаптера. Далее:
    * для данного презентера для каждой категории сравнивается первый элемент(статья) посредством
    * какого-то идентификатора. Можно, что логично, сравнивать по загаловкам статьи. Если равны,
    * то не вызывается метод adapter.setAllDatas(...), так как перерисовывать одно и то же смысла
    * не имеет. Для DetailsFragmentPresenter все аналогично, только для его единственной категории. */

Нужна ли обертка для Runnable? Типа ExecutorService, ThreadPoolExecutor.

Изначально делал класс Serializer с использованием Generics. Успехом это не увенчалось. В JSon пишет нормально, а из JSon - нет. Проверял по логам для случая, когда метод deserialize должен возвращать List<List<Data>>: В обоих листах что-то лежит: size внешнего листа равен 3, как и нужно, внутреннего - 5. Но внутренний объект Data вообще не реагирует ни на что. Если объект null, то в случае вызова любого метода класса Data должен выпасть NullPointerException. Этого не происходит. Но при этом и логи совсем не пишутся.

http://startandroid.ru/ru/blog/492-kak-obernut-metod-v-rxjava.html стоит ли того? Обработка потоков и ошибок проще через Rx. Плохо ли, если вместо каждого Runnable и Thread делать так?